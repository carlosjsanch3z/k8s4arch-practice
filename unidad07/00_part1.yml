kind: Namespace
apiVersion: v1
metadata:
  name: k8s4arch-hotels
  labels:
    name: k8s4arch-hotels
---
apiVersion: v1
kind: Secret
metadata:
  name: k8s4arch-hotels-secret
  namespace: k8s4arch-hotels
type: Opaque
data:
  DB_PATH: L2RiL2hvdGVscy5qc29uCg==
  DB_TABLE: aG90ZWxzCg==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s4arch-hotels-frontend
  namespace: k8s4arch-hotels
  labels:
    app: k8s4arch-hotels
    frontend: react
    version: stable
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s4arch-hotels
      frontend: react
      version: stable
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  template:
    metadata:
      labels:
        app: k8s4arch-hotels
        frontend: react
        version: stable
    spec:
      containers:
      # Frontend
      - image: ghcr.io/go-elevate/k8s4arch-hotels-frontend:stable
        name: k8s4arch-hotels-frontend
        ports:
        - containerPort: 80
        env:
          - name: HOTELS_API_HOST
            value: "http://k8s4arch-hotels-backend-svc"
        resources:
          requests:
            memory: 256Mi
            cpu: 300m
          limits:
            memory: 512Mi
            cpu: 600m
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 20
          periodSeconds: 20
          timeoutSeconds: 2
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
          successThreshold: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s4arch-hotels-backend
  namespace: k8s4arch-hotels
  labels:
    app: k8s4arch-hotels
    backend: python
    version: stable
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s4arch-hotels
      backend: python
      version: stable
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  template:
    metadata:
      labels:
        app: k8s4arch-hotels
        backend: python
        version: stable
    spec:
      initContainers:
      # Run migration script
      - image: ghcr.io/go-elevate/k8s4arch-hotels-backend:stable
        name: k8s4arch-hotels-migrations
        command: ["python", "migrations.py"]
        env:
          - name: DB_PATH
            valueFrom:
              secretKeyRef:
                name: k8s4arch-hotels-secret
                key: DB_PATH
          - name: DB_TABLE
            valueFrom:
              secretKeyRef:
                name: k8s4arch-hotels-secret
                key: DB_TABLE
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 512Mi
            cpu: 400m
        volumeMounts:
        - mountPath: "/db"
          name: db
      containers:
      # Backend
      - name: k8s4arch-hotels-backend
        image: ghcr.io/go-elevate/k8s4arch-hotels-backend:stable
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 1024Mi
            cpu: 500m
          limits:
            memory: 2048Mi
            cpu: 1000m
        env:
          - name: DB_PATH
            valueFrom:
              secretKeyRef:
                name: k8s4arch-hotels-secret
                key: DB_PATH
          - name: DB_TABLE
            valueFrom:
              secretKeyRef:
                name: k8s4arch-hotels-secret
                key: DB_TABLE
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /status
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 1
          failureThreshold: 2
          successThreshold: 3
        livenessProbe:
          httpGet:
            path: /status
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 2
          successThreshold: 1
        volumeMounts:
        - mountPath: "/db"
          name: db
      # Store hotels json
      volumes:
      - name: db
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: k8s4arch-hotels-frontend-svc
  namespace: k8s4arch-hotels
spec:
  selector:
    app: k8s4arch-hotels
    frontend: react
    version: stable
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: k8s4arch-hotels-backend-svc
  namespace: k8s4arch-hotels
spec:
  selector:
    app: k8s4arch-hotels
    backend: python
    version: stable
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000